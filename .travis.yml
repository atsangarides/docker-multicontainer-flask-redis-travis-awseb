language: generic
sudo: required
services:
    - docker

#before_install:
#    - docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from app
#
#after_success:
#    - docker build -t atsangarides/multi-flask-flaskr ./flaskr
#    - docker build -t atsangarides/multi-flask-nginx ./nginx
#    - docker build -t atsangarides/multi-flask-worker ./worker
#    # Log in to docker cli
#    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
#    #  Push images to docker hub
#    - docker push atsangarides/multi-flask-flaskr
#    - docker push atsangarides/multi-flask-nginx
#    - docker push atsangarides/multi-flask-worker

# break down into test and build/push images
 jobs:
   include:
     - stage: run tests
       script:
         - docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from app
#     - stage: Build prod images and push to docker hub
#       script:
#          - docker build -t atsangarides/multi-flask-flaskr ./flaskr
#          - docker build -t atsangarides/multi-flask-nginx ./nginx
#          - docker build -t atsangarides/multi-flask-worker ./worker
#          # Log in to docker cli
#          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
#          # Push images to docker hub
#          - docker push atsangarides/multi-flask-flaskr
#          - docker push atsangarides/multi-flask-nginx
#          - docker push atsangarides/multi-flask-worker
#deploy:
#    # edge: true
#    provider: elasticbeanstalk
#    region: "eu-west-2"
#    app: "multi-docker"
#    env: "MultiDocker-env"
#    bucket_name: "elasticbeanstalk-eu-west-2-983627010696"
#    bucket_path: "multi-docker"
#    on:
#        branch: master
#    access_key_id: $AWS_ACCESS_KEY
#    secret_access_key: $AWS_SECRET_KEY